services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: session-notes-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: session_notes
      POSTGRES_USER: session_user
      POSTGRES_PASSWORD: session_password_123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/database.sql:/docker-entrypoint-initdb.d/01-database.dump:ro
      - ./database/init-restore.sh:/docker-entrypoint-initdb.d/00-init-restore.sh:ro
    networks:
      - session-notes-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h 127.0.0.1 -U session_user -d session_notes && [ -f /var/lib/postgresql/data/.restored_ok ] || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 60s

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: session-notes-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://session_user:session_password_123@postgres:5432/session_notes
      JWT_SECRET: s3ssion-notes-super-secret-jwt-key-9a7f4c2d8b1e
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      NEXT_PUBLIC_APP_URL: http://localhost
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - session-notes-network
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/api/health >/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  session-notes-network:
    driver: bridge
